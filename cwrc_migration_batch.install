<?php

/**
 * @file
 * Install and uninstall functions for cwrc_migration_batch example module.
 */

/**
 * Implements hook_schema().
 */
function cwrc_migration_batch_schema() {
  $schema['cwrc_migration_batch_xlts'] = array(
    'description' => 'Stores xlts files information to be used for batch uploads.',
    'fields' => array(
      'xslt_id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'The unique identifier.',
      ),
      'fid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'version' => array(
        'description' => 'This column simply hold xslt version.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
      ),
      'datastream_id' => array(
        'description' => 'The datastream id.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'datastream_mime_type' => array(
        'description' => 'The datastream MIME type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'cmodel_associations' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of cmodel associated with this xslt.',
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the xslt was last saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('xslt_id'),
    'indexes' => array(
      'fid' => array('fid'),
    ),
    'foreign keys' => array(
      'file' => array(
        'table' => 'file_managed',
        'columns' => array('fid' => 'fid'),
      ),
    ),
  );

  return $schema;
}

/**
 * Adding a table to store xslt to be used for.
 */
function cwrc_migration_batch_update_7000(&$sandbox) {
  $schema['cwrc_migration_batch_xlts'] = array(
    'description' => 'Stores xlts files information to be used for batch uploads.',
    'fields' => array(
      'xslt_id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'The unique identifier.',
      ),
      'fid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'default' => 0,
      ),
      'version' => array(
        'description' => 'This column simply hold xslt version.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
      ),
      'datastream_id' => array(
        'description' => 'The datastream id.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'datastream_mime_type' => array(
        'description' => 'The datastream MIME type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'cmodel_associations' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of cmodel associated with this xslt.',
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the xslt was last saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('xslt_id'),
    'indexes' => array(
      'fid' => array('fid'),
    ),
    'foreign keys' => array(
      'file' => array(
        'table' => 'file_managed',
        'columns' => array('fid' => 'fid'),
      ),
    ),
  );
  db_create_table('cwrc_migration_batch_xlts', $schema['cwrc_migration_batch_xlts']);
}
